@use "sass:color";
@use "./_variable" as var;
@use "./_functions" as fn;
@use "./_table_of_contents";

html,
body {
    font-family: var.$font-family-base;
    color: var.$text-body;
    background-color: var.$background;
    line-height: 1.9;
    word-break: break-word;
    word-wrap: break-word;
    line-break: strict;
    text-size-adjust: none;
}

a {
    color: var.$link;

    &:hover {
        color: var.$hover;
    }

    &.keyword {
        text-decoration: none;
        border-bottom: 1px dotted var.$border;
        color: var.$text;
    }
}

h1,
h2,
h3,
h4,
h5,
h6 {
    display: block;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    unicode-bidi: isolate;
    color: var.$text-header;
    line-height: 1.3;

    a {
        color: var.$text-header;
        text-decoration: none;

        &:hover {
            color: var.$hover;
        }
    }
}

/* container */
#container,
#footer {
    padding-left: 15px;
    padding-right: 15px;
    margin: 0 auto;

    @media #{var.$mq-sm} {
        width: 92%;
        max-width: 750px;
        padding-left: 0;
        padding-right: 0;
    }

    @media #{var.$mq-md} {
        width: 85%;
        max-width: 750px;
    }
}

/* シングルカラムレイアウト - センター配置 */
#content-inner {
    flex-direction: column;
    align-items: center;
    display: flex;
}

#wrapper {
    margin: 0 auto;
    width: 100%;

    /* メインコンテンツをcontainer-innerと同じ幅にする */
    .main-inner {
        width: 100%;
        max-width: 750px;
        margin-left: auto;
        margin-right: auto;
    }

    @media #{var.$mq-sm} {
        width: 100%;
    }

    @media #{var.$mq-md} {
        width: 100%;
    }
}

#box2 {
    width: 100%;
    margin: 0 auto;
}

#box2-inner {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    justify-content: center;
    align-items: top;
    margin: 0 auto;

    @media #{var.$mq-sm} {
        flex-direction: row;
        justify-content: left;
        margin: 0 -10px;
    }

    @media #{var.$mq-md} {
        margin: 0 -15px;
    }
}

.hatena-module {
    width: 100%;
    text-align: center;

    @media #{var.$mq-sm} {
        width: 31%;
        margin: 0 1%;
    }

    @media #{var.$mq-md} {
        width: 30%;
        margin: 0 1.5%;
    }
}

/* ヘッダ - センター揃え */
#blog-title {
    margin: 2em 0;
    text-align: center;

    @media #{var.$mq-sm} {
        margin: 3em 0;
        text-align: center;
        /* すべての画面サイズでセンター揃え */
    }
}

#title {
    margin: 0;
    font-family: var.$font-family-title;
    font-size: 1.5rem;

    @media #{var.$mq-md} {
        font-size: 1.7rem;
    }

    a {
        color: var.$text;
    }
}

#blog-description {
    font-weight: normal;
    font-size: .8rem;
    margin: 1em 0 0;
}

/* ヘッダ画像を設定したとき - 非表示に設定 */
.header-image-enable,
.header-image-only {
    #blog-title {
        margin: 2em 0;
    }

    #blog-title-inner {
        display: flex;
        flex-direction: row;
        align-items: center;
    }

    #blog-title-content {
        margin-left: 10px;
        margin-right: 10px;
    }
}

/* タイトル下HTML */
#top-editarea {
    margin-bottom: 1em;
}

/* パンくず（カテゴリー、記事ページで表示されます） */
.breadcrumb {
    font-size: .9rem;
}

/* entry */
.entry {
    position: relative;
    margin-bottom: 3em;
    margin-left: auto;
    margin-right: auto;
    width: 100%;

    /* テキストは左揃えのまま維持 */
    text-align: left;
}

.entry-header {
    position: relative;
    display: flex;
    flex-direction: column;
    // エントリーヘッダーの末尾にカテゴリをおいて本文と一体にみせるため、ボトムのパディングはミニマムに
    padding-bottom: 0;
    margin-bottom: 1em;

    /* タイトルを含むヘッダー全体に適用 */
    @media #{var.$mq-md} {
        padding: 0 0 0.5em 0;
        /* 下パディングを調整 */
    }

    /* 装飾線なし - 仕様通り */
}

.entry-title {
    order: 1;
    margin: 0;
    font-size: 1.5rem;
    text-align: left;
    width: 100%;

    @media #{var.$mq-md} {
        font-size: 1.7rem;
    }
}

.date {
    // タイトルの下に表示するために順序を変更、余白を縮小
    order: 2;
    margin: 0.7em 0 0.4em;
    padding-bottom: 2em;
    // 少し小さく
    font-size: 0.8rem;
    text-align: left;
    color: var.$text-low-priority;

    a {
        color: var.$text-light;
        text-decoration: none;

        &:hover {
            text-decoration: underline;
        }

        &::before {
            content: 'Posted on ';
            font-size: 0.9em;
        }
    }

    /* 日付を目立たせる */
    .entry-date {
        margin-right: 1.2em;
        display: inline-block;
        position: relative;

        &::after {
            content: "•";
            position: absolute;
            right: -0.8em;
            top: 0;
            color: #ccc;
        }
    }

    .date-last-updated {
        color: var.$text-low-priority;
        display: inline-block;

        &::before {
            font-size: 0.9em;
        }
    }
}

/* カテゴリ */
.categories {
    order: 3;
    font-size: 0.9rem;
    text-align: left;
    // 左パディングを0にして親要素のパディングを継承
    padding-left: 0;

    a {
        // 通常時は背景色なし
        background-color: transparent;
        // 右パディングは#がない分だけ大きくする
        padding-right: 8px;
        display: inline-block;
        text-decoration: none;
        color: var.$text;
        // 枠線は丸囲みで表示
        border: 1px solid var.$category-border;
        border-radius: 15px;

        /* カテゴリの前にハッシュ記号を追加 */
        &::before {
            content: "#";
            margin-left: 0.7em; // aのmargin-rightと合わせる
            margin-right: 3px;
            color: var.$link; // ハッシュだけリンク色
            font-weight: normal;
            font-size: 0.95em;
        }

        &:hover {
            // ホバー時にうっすらと青系の背景色
            background-color: var.$category-hover;
        }
    }
}

/* 「編集する」ボタン */
.entry-header-menu {
    position: absolute;
    top: 0;
    right: 0;
}

/* 記事内の書式 */
.entry-content {
    /* タイトルと合わせて本文の配置を調整（タイトルより右に5pxインデント、右側にも5px余白） */
    display: block;
    padding: 0 0 5px 0;
    margin: 0 5px 0 5px;
    line-height: 1.9;

    /* テキスト選択時のスタイル */
    ::selection {
        background-color: rgba(var.$link, 0.2);
    }

    h1 + p,
    h2 + p,
    h3 + p,
    h4 + p,
    h5 + p,
    h6 + p {
        margin-top: .3em;
    }

    p + p {
        margin-top: 1.5em;
    }

    /* 段落スタイルを追加 */
    p {
        margin-block-start: 1em;
        margin-block-end: 1em;
        margin-inline-start: 0px;
        margin-inline-end: 0px;
        line-height: 1.8;
    }

    /* リンクのスタイルを改善 */
    a {
        text-decoration-thickness: 1px;
        text-underline-offset: 2px;
        transition: color 0.2s ease;

        &:hover {
            text-decoration-thickness: 2px;
        }
    }

    img,
    video {
        max-width: 100%;
        height: auto;
        display: block;
        margin: 0 auto;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-weight: 700;
        margin: 0;
        line-height: 1.5;
        outline: 0;
        // 見出しは左揃えに統一
        text-align: left;
    }

    h1 {
        font-size: 1.5rem;
        position: relative;
        margin-top: 2em;
        margin-bottom: 1.1em;
        padding-bottom: 0.2em;
        // 細いボーダーのみでシンプルに
        border-bottom: 1px solid var.$border-light;

        @media #{var.$mq-md} {
            font-size: 1.7rem;
        }
    }

    h2 {
        font-size: 1.4rem;
        position: relative;
        margin-top: 2em;
        margin-bottom: 0.8em;
        padding-bottom: 0.3em;
        // 細いボーダーのみでシンプルに
        border-bottom: 1px solid var.$border-light;

        @media #{var.$mq-md} {
            font-size: 1.5rem;
        }
    }

    h3 {
        font-size: 1.2rem;
        position: relative;
        margin-top: 1.8em;
        margin-bottom: 0.5em;
        color: #444;

        /* h2より少し薄い色にして階層を表現 */
        @media #{var.$mq-md} {
            font-size: 1.3rem
        }
    }

    h4 {
        font-size: 1.1rem;
    }

    h5 {
        font-size: 1rem;
    }

    h6 {
        font-size: .9rem;
    }

    ul,
    ol,
    dd {
        margin: 0 auto 1em;
        padding-left: 1em;
        max-width: 100%;

        li {
            margin-bottom: 0.5em;

            ul,
            ol {
                margin-top: 0.5em;
                margin-bottom: 0;
            }
        }
    }

    table {
        border-collapse: collapse;
        border-spacing: 2px;
        margin: 1.2em auto;
        width: auto;
        overflow: auto;
        word-break: normal;
        display: block;
        font-size: 0.95rem;
        /* box-shadowとborder-radiusを削除 - テーブル自体にはボーダーを適用しない */

        @media #{var.$mq-md} {
            font-size: .9rem;
            width: 85%;
        }
    }

    table th,
    table td {
        border: 1px solid var.$border;
        padding: 8px 12px;
        text-align: left;
    }

    table th {
        background: var.$bg-table-th;
        font-weight: bold;
    }

    blockquote {
        font-size: 0.95em;
        margin: 1.4rem 0;
        border-left: 3px solid var.$border-bq;
        padding: 2px 0 2px 0.7em;
        color: var.$text-low-priority;

        p:first-of-type {
            margin-top: 0;
        }

        p:last-of-type {
            margin-bottom: 0;
        }
    }

    pre,
    code {
        font-family: var.$font-family-monospace;
        -webkit-font-smoothing: antialiased;
    }

    pre {
        background: var.$bg-code;
        border: none;
        white-space: pre-wrap;
        text-overflow: ellipsis;
        line-height: 1.7;
        font-size: 0.85rem;
        padding: 15px;
        border-radius: 5px;
        margin: 1.5em auto;
        max-width: 95%;
        box-shadow: inset 0 0 5px var.$shadow-light;
        color: #fff;

        & > code {
            margin: 0;
            padding: 1.1em;
            white-space: pre;
            border: none;
            background-color: transparent;
        }
    }

    code {
        padding: .2em .4em;
        background: var.$bg-span;
        font-size: 0.85rem;
        border-radius: 4px;
        vertical-align: 0.08em;
    }

    .synStatement,
    .synType,
    .token.atrule,
    .token.attr-value,
    .token.deleted,
    .token.important,
    .token.keyword,
    .token.selector {
        color: #ff8fa3;
    }

    .synIdentifier,
    .token.function,
    .token.property,
    .token.tag {
        color: #38c7ff;
    }

    .token.punctuation {
        color: #939bc1;
    }

    .synConstant,
    .language-css .token.string,
    .style .token.string,
    .token.attr-name,
    .token.boolean,
    .token.entity,
    .token.number,
    .token.operator,
    .token.string,
    .token.url {
        color: #ffc56d;
    }

    .synComment,
    .token.cdata,
    .token.comment,
    .token.doctype,
    .token.prolog {
        color: #94a1b3;
    }

    hr {
        border-top: 2px solid var.$border-light;
        margin: 2.5em auto;
    }

    /* 目次のスタイルは _table_of_contents.scss に移行しました */

}

/* 記事下 */
.entry-footer {
    .social-buttons {
        margin-bottom: 1em;
    }
}

.entry-footer-section {
    color: var.$text-light;
    font-size: .9rem;

    a {
        color: var.$text-light;
        text-decoration: none;
    }
}

.entry-footer-subscribe {
    display: none;
}

/* コメント */
.comment-box {
    position: relative;
    margin: 1em 0;
    // 関連記事との間に薄い灰色線を引く（上部）
    border-top: 1px solid var.$border;
    padding-left: 30px; // 関連記事と合わせる

    .comment {
        list-style: none;
        margin: 0 0 15px 0;
        padding: 0;
        line-height: 1.7;
        font-size: .85rem;

        @media #{var.$mq-sm} {
            font-size: .9rem;
        }

        &::before {
            content: "Discussion";
            display: flex; // フレックスボックスを使用して中央配置
            width: 100%;
            font-weight: bold;
            font-size: 1.2em;
            padding-top: 15px;
            padding-bottom: 15px;
        }
    }

    // コメントがない場合は描画されない
    .entry-comment {
        // レイアウト位置をHTMLではなくcssで制御するためグリッドレイアウトを適用
        display: grid;
        // 左上エリア: アイコン+名前用、右上エリア: 時間、下エリア: コンテンツ用(合算値)
        grid-template-columns: auto 1fr;
        // 2行: 1行目がユーザー名と日付、2行目がコメント本文
        grid-template-rows: auto auto;
        // エリアの名前付け
        grid-template-areas:
            "user metadata"
            "content content";
        gap: 5px 10px; // 行間と列間の余白
        padding: 12px 0;
        // 次のコメントとの間に薄い灰色線を引く（下部）
        border-bottom: 1px dotted var.$border;
        width: 90%;
        margin: 0;
        transition: all 0.2s ease;
    }

    .read-more-comments {
        padding: 10px 0;
    }

    // ユーザーアイコン+ユーザー名のスタイル
    .comment-user-name {
        grid-area: user;
        display: flex;
        align-items: center; // 中央揃え
        margin: 0;
        padding: 0;
        font-size: .9rem;
        font-weight: bold;
        line-height: 1.3;

        .hatena-id-icon {
            align-self: start; // 上揃え
            width: 40px;
            height: 40px;
            border-radius: 3px;
        }

        // ユーザー名のスタイル
        .comment-user-id {
            margin-left: 10px; // アイコンと少し間を与える
            color: var.$text-body;
            text-decoration: none;
        }
    }

    // 日付のスタイル
    .comment-metadata {
        grid-area: metadata;
        color: var.$text-light;
        align-self: center; // 中央揃え
        padding: 0;
        font-size: .9rem;
        line-height: 1.3; // ユーザー名と同じ行高

        a {
            color: var.$text-light;
        }
    }

    // コメント本文のスタイル
    .comment-content {
        grid-area: content;
        margin: 0;
        padding: 0;
        word-wrap: break-word;
        color: var.$text;
        font-size: .85rem;

        p {
            margin: 0 0 .6em 0;
        }
    }
}

// コメントの各要素のスタイルは既にグリッド内部で定義済み
// .comment-user-name, .comment-metadata, .comment-content のスタイルは
// コメントボックス内で定義されています

.leave-comment-title {
    position: relative;
    display: inline-block;
    width: 40px; // 仕様通り40pxサイズに調整
    height: 40px;
    border-radius: 50%; // 円形にする
    text-indent: -9999px; // アクセシビリティのため文字を画面外に
    overflow: hidden;

    &::before {
        content: "";
        position: absolute;
        inset: 0;
        display: flex;
        align-items: center;
        justify-content: center;

        // 吹き出し風のSVGアイコンを表示 - 外部リソースなので直接灰色(#7d7d7d)を指定する。(変数にしても参照させようがない)
        //background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%237d7d7d' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'><path d='M7 16v3.1l3.1-2.2A12.6 12.6 0 0 0 12 17c5 0 8-2.6 8-6s-3-6-8-6S4 7.4 4 11c0 1.8.7 3.4 2.2 4.5L7 16Z'/></svg>");

        // scss関数を利用してSVGのurl生成前に色を差し替え
        background-image: fn.url-svg("<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'><path d='M7 16v3.1l3.1-2.2A12.6 12.6 0 0 0 12 17c5 0 8-2.6 8-6s-3-6-8-6S4 7.4 4 11c0 1.8.7 3.4 2.2 4.5L7 16Z'/></svg>", var.$text-light);

        background-repeat: no-repeat;
        background-position: center;
        /* アイコンしか表示したいのでサイズは維持 */
        background-size: 100%;
    }

    // ホバーでなにもしない
}

/* Pager */
.pager {
    display: flex;
    flex-wrap: wrap;
    -webkit-box-pack: justify;
    justify-content: space-between;
    position: relative;
    padding: 2em 0;
    // コメントとの間に薄い灰色線を引く（上部）
    border-top: 1px solid var.$border;
}

// 前の記事と次の記事のスタイル調整
.prev-entry,
.next-entry {
    padding: 0 1.5em;
    margin: 0 10px;
    text-align: center;
    max-width: 45%;
}

// リンクスタイル
.pager a {
    padding: 0 1.0em;
    text-decoration: none;
    display: block;
    position: relative;
    color: var.$text-body;
    font-weight: bold;

    // <<や>>を非表示にする
    span {
        display: none;
    }

    // 「前の記事」「次の記事」のラベルを表示
    &::before {
        display: block;
        font-size: 0.8rem;
        color: var.$text-light;
        margin-bottom: 0.5em;
    }

    &:hover {
        text-decoration: underline;
    }
}

// 「前の記事」のラベル
.prev-entry a::before {
    content: "前の記事";
}

// 「次の記事」のラベル
.next-entry a::before {
    content: "次の記事";
}

/* サイドバーモジュール */
.hatena-module {
    box-sizing: border-box;
    margin-bottom: 3em;
    font-size: .85rem;

    @media #{var.$mq-sm} {
        font-size: .9rem;
        padding-left: 30px;
    }
}

.hatena-module-title {
    margin-bottom: .6em;
    padding-bottom: .2em;
    font-size: 1rem;
    font-weight: bold;
    text-align: left;
    color: var.$text-header;

    /* モジュールタイトルは中央揃え */
    a {
        color: var.$text-body;
        text-decoration: none;

        &:hover {
            text-decoration: underline;
        }
    }
}

/* Profile module */
.hatena-module-profile {
    text-align: left;

    .profile-icon {
        float: left;
        margin: 5px 10px 10px 0;
        display: block;
        width: 40px;
        height: 40px;
    }

    .id {
        display: block;
        font-weight: bold;
        margin-bottom: .3em;

        a {
            color: var.$text-body; // リンクは色をつけない
            text-decoration: none; // 名前はアンダーラインもつけない
        }
    }

    .profile-description {
        text-align: left;

        p {
            margin-top: 0;
        }
    }
}

/* urllist module */
.hatena-urllist {
    list-style: none;
    margin: 0;
    padding: 0;
    text-align: left; // 一覧は左揃えに統一

    li {
        padding: .5em 0;

        &:last-child {
            padding-bottom: 0;
        }

        a {
            color: var.$text-body; // はてなモジュールのリンクは色をつけない
            text-decoration: none;

            &:hover {
                text-decoration: underline;
            }
        }
    }

    .urllist-category-link {
        font-size: .7rem;
        padding: .1em .3em;
    }

    .urllist-date-link a {
        color: var.$text-low-priority;
    }

    .urllist-entry-body {
        margin-top: .3em;
    }
}

/* recent-entry module */
.hatena-module-recent-entries {

    // タイトル・日付の共通スタイル
    .urllist-title-link {
        font-size: 1rem;
        font-weight: bold;
        line-height: 1.4;
        color: var.$text-body;
        text-decoration: none;
    }

    .urllist-date-link a {
        font-size: 0.85em;
        color: var.$text-low-priority;
    }

    // 最新記事のアイテム内部のレイアウト
    .recent-entries-item-inner {
        // レイアウト位置をHTMLではなくcssで制御するためグリッドレイアウトを適用
        display: grid;
        grid-template-columns: auto 1fr;
        // 2行: 1行目がユーザー名と日付、2行目がコメント本文
        grid-template-rows: auto auto;
        // エリアの名前付け
        grid-template-areas:
            "title"
            "date"
            "categories";
        gap: 2px auto; // 行間と列間の余白

        // タイトル
        .urllist-title-link {
            grid-area: title;
            padding: 0;
        }

        // 日付
        .urllist-date-link {
            grid-area: date;
            padding: 0;
            color: var.$text-low-priority;
        }

        // カテゴリ
        .urllist-categories {
            grid-area: categories;
            padding: 0;

            a {
                color: var.$text-low-priority;
            }

            .urllist-category-link {
                padding: 0;
            }
        }
    }

}

/* Search module */
.hatena-module-search-box {
    .search-form {
        border: 1px solid var.$border;
        border-radius: 8px;
        width: 100%;
        box-sizing: border-box;
        display: flex;
        align-items: center;

        &:focus-within {
            box-shadow: 0 2px 5px var.$shadow-hover;
        }
    }

    .search-module-input {
        flex: 1 0;
        padding: 5px;
        color: var.$text;
        background: none;
        border: none;
        outline: none;
        height: 20px;
    }

    .search-module-button {
        width: 24px;
        height: 24px;
        margin-right: 5px;
        background: transparent url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill:none;%7D%3C/style%3E%3C/defs%3E%3Ctitle%3Esearch%3C/title%3E%3Cpath d='M16.7,15l-3.4-3.3h-.1a5.4,5.4,0,0,0,.9-3.1,5.6,5.6,0,1,0-5.6,5.6,5.4,5.4,0,0,0,3.1-.9.1.1,0,0,0,.1.1L15,16.7a1.1,1.1,0,0,0,.8.3,1.6,1.6,0,0,0,.9-.3,1.4,1.4,0,0,0,0-1.7M8.5,12.3A3.8,3.8,0,0,1,4.8,8.5,3.8,3.8,0,0,1,8.5,4.7a3.9,3.9,0,0,1,3.8,3.8,3.8,3.8,0,0,1-3.8,3.8'/%3E%3Crect class='a' width='20' height='20'/%3E%3C/svg%3E") no-repeat center;
        background-size: 20px 20px;
        border: none;
        outline: none;
        color: transparent;
        overflow: hidden;
        opacity: .5;
        cursor: pointer;

        &:hover {
            opacity: .85;
        }
    }
}

/* About ページ */
.page-about {
    .entry-content {
        dt {
            font-weight: bold;
            border-bottom: 1px solid var.$border;
            margin-bottom: .5em;
        }

        dd {
            margin-left: 0;
            margin-bottom: 2em;
        }
    }
}

/* Archive */
.archive-header-category {
    text-align: center;
}

.page-archive {
    .archive-entry {
        margin-bottom: 3em;
        margin-left: auto;
        margin-right: auto;
        line-height: 1.3;
        width: 100%;
        text-align: left;
        padding: 1.5em;
        border-radius: 8px;
        background-color: #ffffff;
        box-shadow: 0 2px 5px var.$shadow-light;
        transition: all 0.3s ease;

        &:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px var.$shadow-hover;
        }
    }

    .entry-title {
        margin: .5em auto .7em;
        text-align: left;
        font-size: 1.3rem;

        a {
            text-decoration: none;

            &:hover {
                color: var.$link;
            }
        }
    }

    .entry-thumb {
        width: 100px;
        height: 100px;
        background-size: cover;
        border-radius: 5px;
        box-shadow: 0 2px 4px var.$shadow;

        @media #{var.$mq-sm} {
            width: 130px;
            height: 130px;
        }
    }

    .entry-description {
        margin: 0;
        font-size: .85rem;

        @media #{var.$mq-sm} {
            font-size: .9rem;
        }
    }

    .social-buttons {
        display: block;
        margin-top: .3em;
    }
}


/* footer */
#footer {
    margin-top: 2em;
    margin-left: auto;
    margin-right: auto;
    padding-bottom: 2rem;
    text-align: center;
    font-size: .8rem;
    color: var.$text-light;

    a {
        color: var.$text-light;
    }

    p {
        margin: .5em auto;
    }
}
